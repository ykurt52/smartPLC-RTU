/* SPDX-License-Identifier: (GPL-2.0+ OR BSD-3-Clause) */
/*
 * Copyright (C) STMicroelectronics 2020 - All Rights Reserved
 * Author: STM32CubeMX code generation for STMicroelectronics.
 */

/* For more information on Device Tree configuration, please refer to
 * https://wiki.st.com/stm32mpu/wiki/Category:Device_tree_configuration
 */

/dts-v1/;

#include <dt-bindings/clock/stm32mp1-clksrc.h>
#include "stm32mp153.dtsi"
#include "stm32mp15xa.dtsi"
#include "stm32mp15-plc-pinctrl.dtsi"
#include "stm32mp15xxab-pinctrl.dtsi"
#include "stm32mp15-plc.dtsi"
#include "stm32mp15-u-boot.dtsi"
#include "stm32mp153-m4-srm.dtsi"

/ {
	model = "GMT Control smartPLC-SBC";
	compatible = "st,stm32mp153d-plc", "st,stm32mp153";

	aliases {
		serial0 = &usart3;
		serial1 = &usart2;
		ethernet0 = &ethernet0;
		spi0 = &qspi;
	};

	chosen {
		bootargs = "ubi.mtd=UBI root=ubi0:rootfs rootfstype=ubifs rw rootwait console=ttySTM0,115200";
		stdout-path = "serial0:115200n8";
	};

	memory@c0000000 {
		device_type = "memory";
		reg = <0xC0000000 0x20000000>;
	};

	reserved-memory {
		#address-cells = <1>;
		#size-cells = <1>;
		ranges;

		mcuram2: mcuram2@10000000 {
			compatible = "shared-dma-pool";
			reg = <0x10000000 0x40000>;
			no-map;
		};

		vdev0vring0: vdev0vring0@10040000 {
			compatible = "shared-dma-pool";
			reg = <0x10040000 0x1000>;
			no-map;
		};

		vdev0vring1: vdev0vring1@10041000 {
			compatible = "shared-dma-pool";
			reg = <0x10041000 0x1000>;
			no-map;
		};

		vdev0buffer: vdev0buffer@10042000 {
			compatible = "shared-dma-pool";
			reg = <0x10042000 0x4000>;
			no-map;
		};

		mcuram: mcuram@30000000 {
			compatible = "shared-dma-pool";
			reg = <0x30000000 0x40000>;
			no-map;
		};

		retram: retram@38000000 {
			compatible = "shared-dma-pool";
			reg = <0x38000000 0x10000>;
			no-map;
		};

		optee_memory: optee@0xde000000 {
			reg = <0xde000000 0x02000000>;
			no-map;
		};
	};

	config {
		u-boot,boot-led = "run";
		u-boot,error-led = "err";
		u-boot,mmc-env-partition = "ssbl";
	};

	led {
		compatible = "gpio-leds";

		run {
			label = "run";
			gpios = <&gpiod 10 GPIO_ACTIVE_HIGH>;
			linux,default-trigger = "heartbeat";
			default-state = "on";
			status = "okay";
		};

		com {
			label = "com";
			gpios = <&gpioa 15 GPIO_ACTIVE_HIGH>;
			default-state = "on";
			status = "okay";
		};

		err {
			label = "err";
			gpios = <&gpiod 3 GPIO_ACTIVE_HIGH>;
			default-state = "off";
			status = "okay";
		};
	};

	clocks {
#ifndef CONFIG_STM32MP1_TRUSTED
		clk_lsi: clk-lsi {
			clock-frequency = <32000>;
		};

		clk_hsi: clk-hsi {
			clock-frequency = <64000000>;
		};

		clk_csi: clk-csi {
			clock-frequency = <4000000>;
		};

		clk_lse: clk-lse {
			clock-frequency = <32768>;
			st,drive = <LSEDRV_MEDIUM_HIGH>;
		};

		clk_hse: clk-hse {
			clock-frequency = <24000000>;
		};
#endif	/*CONFIG_STM32MP1_TRUSTED*/
	};

	usb_phy_tuning: usb-phy-tuning {
		st,hs-dc-level = <2>;
		st,fs-rftime-tuning;
		st,hs-rftime-reduction;
		st,hs-current-trim = <15>;
		st,hs-impedance-trim = <1>;
		st,squelch-level = <3>;
		st,hs-rx-offset = <2>;
		st,no-lsfs-sc;
	};

	vin: vin {
		compatible = "regulator-fixed";
		regulator-name = "vin";
		regulator-min-microvolt = <5000000>;
		regulator-max-microvolt = <5000000>;
		regulator-always-on;
	};

	vddcore: vddcore {
		compatible = "regulator-fixed";
		regulator-name = "vddcore";
		regulator-min-microvolt = <1200000>;
		regulator-max-microvolt = <1200000>;
		regulator-always-on;
		lp-stop {
			regulator-on-in-suspend;
		};
		standby-ddr-sr {
			regulator-off-in-suspend;
		};
		standby-ddr-off {
			regulator-off-in-suspend;
		};
	};

	vdd_ddr: vdd_ddr {
		compatible = "regulator-fixed";
		regulator-name = "vdd_ddr";
		regulator-min-microvolt = <1350000>;
		regulator-max-microvolt = <1350000>;
		regulator-always-on;
		lp-stop {
			regulator-on-in-suspend;
		};
		standby-ddr-sr {
			regulator-on-in-suspend;
		};
		standby-ddr-off {
			regulator-off-in-suspend;
		};
	};

	vtt_ddr: vtt_ddr {
		compatible = "regulator-fixed";
		regulator-name = "vtt_ddr";
		regulator-min-microvolt = <675000>;
		regulator-max-microvolt = <675000>;
		regulator-always-on;
		lp-stop {
			regulator-off-in-suspend;
		};
		standby-ddr-sr {
			regulator-off-in-suspend;
		};
		standby-ddr-off {
			regulator-off-in-suspend;
		};
	};

	vdd: vdd {
		compatible = "regulator-fixed";
		regulator-name = "vdd";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		lp-stop {
			regulator-on-in-suspend;
		};
		standby-ddr-sr {
			regulator-on-in-suspend;
		};
		standby-ddr-off {
			regulator-on-in-suspend;
		};
	};

	vdd_usb: vdd_usb {
		compatible = "regulator-fixed";
		regulator-name = "vdd_usb";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		regulator-always-on;
		standby-ddr-sr {
			regulator-on-in-suspend;
		};
		standby-ddr-off {
			regulator-on-in-suspend;
		};
	};

	vdd_eth: vdd_eth {
		compatible = "regulator-fixed";
		regulator-name = "vdd_eth";
		regulator-min-microvolt = <3300000>;
		regulator-max-microvolt = <3300000>;
		gpio = <&gpioc 3 GPIO_ACTIVE_HIGH>;
		regulator-always-on;
		regulator-boot-on;
	};

	connector {
		compatible = "usb-c-connector";
		label = "USB-C";
		power-role = "dual";
		power-opmode = "default";

		port {
			con_usbotg_hs_ep: endpoint {
				remote-endpoint = <&usbotg_hs_ep>;
			};
		};
	};
};

#ifndef CONFIG_STM32MP1_TRUSTED
&rcc {
	st,hsi-cal;
	st,csi-cal;
	st,cal-sec = <60>;
	st,clksrc = <
		CLK_MPU_PLL1P
		CLK_AXI_PLL2P
		CLK_MCU_PLL3P
		CLK_PLL12_HSE
		CLK_PLL3_HSE
		CLK_PLL4_HSE
		CLK_RTC_LSE
		CLK_MCO1_DISABLED
		CLK_MCO2_DISABLED
	>;

	st,clkdiv = <
		1 /*MPU*/
		0 /*AXI*/
		0 /*MCU*/
		1 /*APB1*/
		1 /*APB2*/
		1 /*APB3*/
		1 /*APB4*/
		2 /*APB5*/
		23 /*RTC*/
		0 /*MCO1*/
		0 /*MCO2*/
	>;

	st,pkcs = <
		CLK_CKPER_HSE
		CLK_FMC_PLL4P
		CLK_QSPI_PLL4P
		CLK_ETH_PLL4P
		CLK_SDMMC12_PLL4P
		CLK_DSI_DSIPLL
		CLK_STGEN_HSE
		CLK_USBPHY_HSE
		CLK_SPI2S1_PLL3Q
		CLK_SPI2S23_PLL3Q
		CLK_SPI45_HSI
		CLK_SPI6_HSI
		CLK_I2C46_HSI
		CLK_SDMMC3_DISABLED
		CLK_USBO_USBPHY
		CLK_ADC_CKPER
		CLK_CEC_DISABLED
		CLK_I2C12_HSI
		CLK_I2C35_HSI
		CLK_UART1_HSI
		CLK_UART24_HSI
		CLK_UART35_HSI
		CLK_UART6_HSI
		CLK_UART78_HSI
		CLK_SPDIF_DISABLED
		CLK_FDCAN_PLL4Q
		CLK_SAI1_DISABLED
		CLK_SAI2_DISABLED
		CLK_SAI3_DISABLED
		CLK_SAI4_DISABLED
		CLK_RNG1_LSI
		CLK_RNG2_LSI
		CLK_LPTIM1_DISABLED
		CLK_LPTIM23_DISABLED
		CLK_LPTIM45_DISABLED
	>;

	/* VCO = 1066 MHz => P = 266 (AXI), Q = 533 (GPU), R = 533 (DDR) */
	pll2: st,pll@1 {
		compatible = "st,stm32mp1-pll";
		reg = <1>;
		cfg = <2 65 1 0 0 PQR(1,1,1)>;
		frac = <0x1400>;
	};

	/* VCO = 416 MHz => P = 208, Q = 104, R = 11 */
	pll3: st,pll@2 {
		compatible = "st,stm32mp1-pll";
		reg = <2>;
		cfg = <2 51 1 3 36 PQR(1,1,1)>;
	};

	/* VCO = 600 MHz => P = 100, Q = 75, R = 24 */
	pll4: st,pll@3 {
		compatible = "st,stm32mp1-pll";
		reg = <3>;
		cfg = <1 49 5 7 24 PQR(1,1,1)>;
	};
};
#endif /* CONFIG_STM32MP1_TRUSTED */

&bsec {
	mac_addr: mac_addr@e4 {
		reg = <0xe4 0x8>;
		st,non-secure-otp;
	};

	board_id: board_id@ec {
		reg = <0xec 0x4>;
		st,non-secure-otp;
	};
};

&cpu0{
	cpu-supply = <&vddcore>;
};

&cpu1{
	cpu-supply = <&vddcore>;
};

&crc1 {
	status = "okay";
};

&dma1 {
	sram = <&dma_pool>;
	status = "okay";
};

&dma2 {
	sram = <&dma_pool>;
	status = "okay";
};

&dmamux1 {
	status = "okay";
	dma-masters = <&dma1 &dma2>;
	dma-channels = <16>;
};

&dts {
	status = "okay";
};

&ethernet0 {
	status = "okay";
	pinctrl-0 = <&eth0_pins_default>;
	pinctrl-1 = <&eth0_pins_sleep>;
	pinctrl-names = "default", "sleep";
	phy-mode = "rmii";
	max-speed = <100>;
	phy-handle = <&phy0>;
	phy-reset-gpios = <&gpioe 3 GPIO_ACTIVE_LOW>;

	mdio0 {
		#address-cells = <1>;
		#size-cells = <0>;
		compatible = "snps,dwmac-mdio";

		phy0: ethernet-phy@0 {
			reg = <0>;
		};
	};
};

&hash1{
	status = "okay";
};

&hsem {
	status = "okay";
};

&i2c2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&usbh_i2c2_pins_default>;
	pinctrl-1 = <&usbh_i2c2_pins_sleep>;
	status = "okay";
};

&ipcc {
	status = "okay";
};

&iwdg2 {
	timeout-sec = <32>;
	status = "okay";
};

&m_can1 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&fdcan1_pins_default>;
	pinctrl-1 = <&fdcan1_pins_sleep>;
	status = "okay";
};

&m4_crc2 {
	status = "okay";
};

&m4_spi3 {
	pinctrl-names = "default";
	pinctrl-0 = <&spi3_pins_default>;
	status = "okay";
};

&m4_rproc {
	memory-region = <&retram>, <&mcuram>, <&mcuram2>, <&vdev0vring0>,
			<&vdev0vring1>, <&vdev0buffer>;
	mboxes = <&ipcc 0>, <&ipcc 1>, <&ipcc 2>;
	mbox-names = "vq0", "vq1", "shutdown";
	interrupt-parent = <&exti>;
	interrupts = <68 1>;
	wakeup-source;
	status = "okay";

	m4_system_resources{
		status = "okay";
	};

};

&pwr_regulators {
	vdd-supply = <&vdd>;
	vdd_3v3_usbfs-supply = <&vdd_usb>;
};

&rng1 {
	status = "okay";
};

&rtc {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&rtc_pins_default>;
	pinctrl-1 = <&rtc_pins_sleep>;
	status = "okay";
};

&sdmmc1 {
	pinctrl-names = "default", "opendrain", "sleep";
	pinctrl-0 = <&wifi_sdio_pins_default>;
	pinctrl-1 = <&wifi_sdio_pins_opendrain>;
	pinctrl-2 = <&wifi_sdio_pins_sleep>;
	status = "okay";
};

&spi2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&eth0_spi_pins_default>;
	pinctrl-1 = <&eth0_spi_pins_sleep>;
	status = "okay";
};

&spi4 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&expbus_spi4_pins_default>;
	pinctrl-1 = <&expbus_spi4_pins_sleep>;
	status = "okay";
};

&sram {
	dma_pool: dma_pool@0 {
		reg = <0x50000 0x10000>;
		pool;
	};
};

&tamp {
	status = "okay";
};

&uart4 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&rs485_uart4_pins_default>;
	pinctrl-1 = <&rs485_uart4_pins_sleep>;
	status = "okay";
};

&uart8 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&rs485_uart8_pins_default>;
	pinctrl-1 = <&rs485_uart8_pins_sleep>;
	status = "okay";
};

&usart2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&rs232_usart2_pins_default>;
	pinctrl-1 = <&rs232_usart2_pins_sleep>;
	status = "okay";
};

&usart3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&rs232_usart3_pins_default>;
	pinctrl-1 = <&rs232_usart3_pins_sleep>;
	status = "okay";
};

&timers1 {
	/* spare dmas for other usage */
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	timer@0 {
		status = "okay";
	};
};

&timers3 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	timer@2 {
		status = "okay";
	};
};

&timers4 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	timer@3 {
		status = "okay";
	};
};

&timers5 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	timer@4 {
		status = "okay";
	};
};

&timers6 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	timer@5 {
		status = "okay";
	};
};

&timers12 {
	/delete-property/dmas;
	/delete-property/dma-names;
	status = "disabled";
	timer@11 {
		status = "okay";
	};
};

&qspi {                                                    
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&qspi_clk_pins_default &qspi_bk1_pins_default &qspi_bk2_pins_default>;
	pinctrl-1 = <&qspi_clk_pins_sleep &qspi_bk1_pins_sleep &qspi_bk2_pins_sleep>;
	reg = <0x58003000 0x1000>, <0x70000000 0x8000000>;
	#address-cells = <1>;
	#size-cells = <0>;
	status = "okay";

	flash0: w25n01gv@0 {                             
		compatible = "spi-nand";
		reg = <0>;
		spi-rx-bus-width = <4>;
		spi-tx-bus-width = <4>;
		spi-max-frequency = <100000000>;
		#address-cells = <1>;
		#size-cells = <1>;
	};

	flash1: w25q128jv@1 {
		compatible = "jedec,spi-nor";
		reg = <1>;
		spi-rx-bus-width = <4>;
		spi-tx-bus-width = <1>;
		spi-max-frequency = <50000000>;
		#address-cells = <1>;
		#size-cells = <1>;
	};
};

&usart2 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&rs232_usart2_pins_default>;
	pinctrl-1 = <&rs232_usart2_pins_sleep>;
	status = "okay";
};

&usart3 {
	pinctrl-names = "default", "sleep";
	pinctrl-0 = <&rs232_usart3_pins_default>;
	pinctrl-1 = <&rs232_usart3_pins_sleep>;
	status = "okay";
};

&usbh_ehci {
	phys = <&usbphyc_port0>;
	status = "okay";
};

&usbh_ohci {
	status = "okay";
};

&usbotg_hs {
	u-boot,force-b-session-valid;
	hnp-srp-disable;
	/* TEMP: force peripheral for USB OTG */
	dr_mode = "peripheral";
	phys = <&usbphyc_port1 0>;
	phy-names = "usb2-phy";
	usb-role-switch;
	status = "okay";

	port {
		usbotg_hs_ep: endpoint {
			remote-endpoint = <&con_usbotg_hs_ep>;
		};
	};
};

&usbphyc {
	status = "okay";
};

&usbphyc_port0 {
	phy-supply = <&vdd_usb>;
	st,phy-tuning = <&usb_phy_tuning>;
};

&usbphyc_port1 {
	phy-supply = <&vdd_usb>;
	st,phy-tuning = <&usb_phy_tuning>;
};

&vrefbuf {
	regulator-min-microvolt = <2500000>;
	regulator-max-microvolt = <2500000>;
	vdda-supply = <&vdd>;
	status = "okay";
};

&optee_memory {
	status = "okay";
};

/*&optee {
	status = "okay";
};*/
